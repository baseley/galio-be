import { ReactNode, ComponentType } from 'react';
import type { JSX } from 'react';
import { ViewStyle, TextStyle, ImageStyle } from 'react-native';
import GALIO_COLORS from './colors';
import GALIO_SIZES from './sizes';
export type ThemeMode = 'light' | 'dark' | 'auto';
export interface GalioTheme {
    COLORS: typeof GALIO_COLORS;
    SIZES: typeof GALIO_SIZES;
    mode: 'light' | 'dark';
    [key: string]: any;
}
export interface GalioProviderProps {
    children: ReactNode;
    mode?: ThemeMode;
    theme?: {
        COLORS?: Partial<typeof GALIO_COLORS>;
        SIZES?: Partial<typeof GALIO_SIZES>;
        customTheme?: Record<string, any>;
    };
}
declare const DEFAULT_THEME: GalioTheme;
export declare function useGalioTheme(): GalioTheme;
export declare function GalioProvider({ mode, theme, children }: GalioProviderProps): JSX.Element;
export declare function useThemeColors(): {
    facebook: string;
    twitter: string;
    dribbble: string;
    primary: string;
    primaryDark: string;
    primaryLight: string;
    primaryBright: string;
    info: string;
    infoDark: string;
    infoLight: string;
    infoBright: string;
    danger: string;
    dangerDark: string;
    dangerLight: string;
    dangerBright: string;
    warning: string;
    warningDark: string;
    warningLight: string;
    warningBright: string;
    success: string;
    successDark: string;
    successLight: string;
    successBright: string;
    input: string;
    placeholder: string;
    navbar: string;
    block: string;
    icon: string;
    background: string;
    text: string;
    white: string;
    black: string;
    grey: string;
    muted: string;
    transparent: string;
    neutral: (opacity?: number) => string;
} | {
    facebook: string;
    twitter: string;
    dribbble: string;
    primary: string;
    primaryDark: string;
    primaryLight: string;
    primaryBright: string;
    info: string;
    infoDark: string;
    infoLight: string;
    infoBright: string;
    danger: string;
    dangerDark: string;
    dangerLight: string;
    dangerBright: string;
    warning: string;
    warningDark: string;
    warningLight: string;
    warningBright: string;
    success: string;
    successDark: string;
    successLight: string;
    successBright: string;
    input: string;
    placeholder: string;
    navbar: string;
    block: string;
    icon: string;
    background: string;
    text: string;
    white: string;
    black: string;
    grey: string;
    muted: string;
    transparent: string;
    neutral: (opacity?: number) => string;
};
export declare function useGalioStyles<T>(styleFactory?: (theme: GalioTheme) => T): T | undefined;
type NamedStyles = ViewStyle | TextStyle | ImageStyle;
export declare function withGalio<T extends ComponentType<any>>(Component: T, styleFactory?: (theme: GalioTheme) => Record<string, NamedStyles>): T;
export default DEFAULT_THEME;
//# sourceMappingURL=index.d.ts.map